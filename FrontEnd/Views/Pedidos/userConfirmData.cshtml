@model FrontEnd.Models.PedidosViewModel

@{
    ViewBag.Title = "userConfirmData";
    Layout = "~/Views/Shared/NormalUser_Layout.cshtml";
}

@using (Html.BeginForm())
{
    @Html.AntiForgeryToken()
    <!--Section: Block Content-->
    <div class="container mt-5">
        <section>
            <!--Grid row-->
            <div class="row">
                <!--Grid column-->
                <div class="col-lg-8 mb-4">

                    <!-- Card -->
                    <div class="card wish-list pb-1">
                        <div class="card-body">
                            <div class="d-flex mb-4">

                                <h5 class="mb-2">Detalles del Pedido</h5>
                                @if (User.IsInRole("Administrador"))
                                {

                                    <input type="text" id="client" class="form-control font-weight-light ml-2" placeholder="Cédula del cliente">
                                    <button class="ml-2 btn btn-success" type="button" onclick="getCliente()">Buscar</button>

                                }
                            </div>
                            <!-- Grid row -->
                            <div class="row">
                                <!-- Grid column -->
                                <div class="col-lg-6">
                                    <!-- First name -->
                                    <div class="md-form md-outline mb-0 mb-lg-4">
                                        @Html.EditorFor(model => model.vNombre_Cliente, new { htmlAttributes = new { @class = "form-control mb-0 mb-lg-2", @id = "nombre" } })
                                        @Html.ValidationMessageFor(model => model.vNombre_Cliente, "", new { @class = "text-danger" })
                                        <label for="Nombre">Nombre</label>
                                    </div>
                                </div>
                                <!-- Grid column -->
                                <!-- Grid column -->
                                <div class="col-lg-6">
                                    <!-- Last name -->
                                    <div class="md-form md-outline">
                                        @Html.EditorFor(model => model.vTelefono, new { htmlAttributes = new { @class = "form-control", @id = "telefono" } })
                                        @Html.ValidationMessageFor(model => model.vTelefono, "", new { @class = "text-danger" })
                                        <label for="vTelefono">Teléfono</label>
                                    </div>
                                </div>
                                <!-- Grid column -->

                            </div>
                            <!-- Grid row -->
                            <div class="row">
                                <!-- Grid column -->
                                <div class="col-lg-6">
                                    <!-- First name -->
                                    <div class="md-form md-outline mb-0 mb-lg-4">
                                        @Html.EditorFor(model => model.vEmail, new { htmlAttributes = new { @class = "form-control", @id = "email" } })
                                        @Html.ValidationMessageFor(model => model.vEmail, "", new { @class = "text-danger" })
                                        <label for="Email">Email</label>
                                    </div>
                                </div>
                                <!-- Grid column -->
                                <!-- Grid column -->
                                <div class="col-lg-6">
                                    <!-- Last name -->
                                    <div class="md-form md-outline">
                                        @Html.DropDownListFor(model => model.idMedio_Pago, new SelectList(Model.medios, "idMedio", "vNombre"), htmlAttributes: new { @class = "form-control" })
                                        @Html.ValidationMessageFor(model => model.idMedio_Pago, "", new { @class = "text-danger" })
                                        <label for="idMedio_Pago">Método de Pago</label>
                                    </div>
                                </div>
                                <!-- Grid column -->

                            </div>

                            <div class="row">
                                <!-- Grid column -->
                                <div class="col-lg-6">
                                    <!-- First name -->
                                    <div class="md-form md-outline mb-0 mb-lg-4">
                                        @Html.EditorFor(model => model.vDireccion_Envio, new { htmlAttributes = new { @class = "form-control", @id = "direccion" } })
                                        @Html.ValidationMessageFor(model => model.vDireccion_Envio, "", new { @class = "text-danger" })
                                        <label for="vDireccion">Dirección</label>
                                    </div>
                                </div>
                                <!-- Grid column -->
                                <!-- Grid column -->
                                <div class="col-lg-6">
                                    <!-- Last name -->
                                    <div class="md-form md-outline">
                                        @Html.EditorFor(model => model.identificacion, new { htmlAttributes = new { @class = "form-control", @id = "identificacion" } })
                                        @Html.ValidationMessageFor(model => model.identificacion, "", new { @class = "text-danger" })
                                        <label for="Identificación">Identificación</label>
                                    </div>
                                </div>
                                <!-- Grid column -->

                            </div>

                            <div class="form-check pl-0 mb-4 mb-lg-0 ml-2">
                                @Html.CheckBoxFor(model => model.crearCuenta, new { htmlAttributes = new { @class = "form-check-input filled-in" } })
                                <label class="form-check-label small text-uppercase card-link-secondary" for="new3">
                                    Crear una cuenta?
                                </label>
                            </div>

                        </div>
                    </div>
                    <!-- Card -->
                    <div class="alert alert-danger mt-2" role="alert" id="alert" style="visibility:hidden">
                        <p class="m-0" id="alertText"></p>
                    </div>
                </div>
                <!--Grid column-->
                <!--Grid column-->
                <div class="col-lg-4">

                    <!-- Card -->
                    <div class="card mb-4">
                        <div class="card-body">
                            @{
                                List<FrontEnd.Models.CarritoItemViewModel> carrito = Session["Carrito"] as List<FrontEnd.Models.CarritoItemViewModel>;
                                int total = 0;
                                foreach (var item in carrito)
                                {
                                    total = total + (item.cantidad * item.iPrecio);
                                }
                            }
                            <h5 class="mb-3">Monto total de la compra</h5>

                            <ul class="list-group list-group-flush">
                                <li class="list-group-item d-flex justify-content-between align-items-center border-0 px-0 pb-0">
                                    Subtotal
                                    <span>₡@total</span>
                                </li>
                                <li class="list-group-item d-flex justify-content-between align-items-center px-0">
                                    Envío
                                    <span>Gratis</span>
                                </li>
                                <li class="list-group-item d-flex justify-content-between align-items-center border-0 px-0 mb-3">
                                    <div>
                                        <strong>Total Final</strong>
                                        <strong>
                                            <p class="mb-0">(IVA incluido)</p>
                                        </strong>
                                    </div>
                                    <span><strong>₡@total</strong></span>
                                </li>
                            </ul>
                            @if (carrito.Count == 0)
                            {
                                <input value="Finalizar" class="btn btn-primary btn-block waves-effect waves-light disabled" disabled />
                            }
                            else
                            {
                                <input type="submit" value="Finalizar" class="btn btn-primary btn-block waves-effect waves-light" />
                            }

                        </div>
                    </div>
                    <!-- Card -->
                    <!-- Card -->
                    <div class="card mb-4">
                        <div class="card-body">

                            <a class="dark-grey-text d-flex justify-content-between" data-toggle="collapse" href="#collapseExample"
                               aria-expanded="false" aria-controls="collapseExample">
                                Agregar código de descuento(Opcional)
                                <span><i class="fas fa-chevron-down pt-1"></i></span>
                            </a>

                            <div class="collapse" id="collapseExample">
                                <div class="mt-3">
                                    <div class="md-form md-outline mb-0">
                                        <input type="text" id="discount-code" class="form-control font-weight-light"
                                               placeholder="Digíte el código">
                                    </div>
                                </div>
                            </div>
                        </div>
                    </div>
                    <!-- Card -->

                </div>
                <!--Grid column-->

            </div>
            <!--Grid row-->

        </section>
        <!--Section: Block Content-->
    </div>
}

@section Scripts {
    @Scripts.Render("~/bundles/jqueryval")
    <script>

        var requestAjax = (type, url, x, callback) => {
            $.ajax({
                type: type,
                url: url,
                data: JSON.stringify(x),
                contentType: 'application/json; charset=UTF-8',
                dataType: 'json',
                success: callback,
            })
        };

        function getCliente() {
            var identificacion = document.getElementById('client').value;
            if (isNaN(identificacion)) {
                document.getElementById("alertText").innerText = "Cédula inválida";
                document.getElementById("alert").style.visibility = "visible";
                setTimeout(function () {
                    document.getElementById("alert").style.visibility = "hidden";
                }, 3000);
            } else {
                if (identificacion.length < 9 || identificacion.length > 12) {
                    document.getElementById("alertText").innerText = "La cédula debe contener entre 9 y 12 números";
                    document.getElementById("alert").style.visibility = "visible";
                    setTimeout(function () {
                        document.getElementById("alert").style.visibility = "hidden";
                    }, 3000);
                } else {
                    var user = { cedula: identificacion }
                    requestAjax('POST', 'https://localhost:44358/User/getClient', user, function (data) {
                       if (data.status) {
                           document.getElementById("nombre").value = data.nombre;
                           document.getElementById("telefono").value = data.telefono;
                           document.getElementById("direccion").value = data.direccion;
                           document.getElementById("identificacion").value = data.identificacion;
                           document.getElementById("email").value = data.correo;
                        } else {
                            document.getElementById("alertText").innerText = "Cliente no registrado";
                            document.getElementById("alert").style.visibility = "visible";
                            setTimeout(function () {
                                document.getElementById("alert").style.visibility = "hidden";
                            }, 3000);
                        }
                   }); 
                }
            }
        }


    </script>
}